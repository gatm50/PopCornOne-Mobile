//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WindowsPhoneCore.TranslationReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Translation", Namespace="http://schemas.datacontract.org/2004/07/PopCornOneWebApp.Models")]
    public partial class Translation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int LanguageIdField;
        
        private string LexiconField;
        
        private bool PhraseByDefaultField;
        
        private int PhraseIdField;
        
        private string TranslationContentField;
        
        private string TranslationDescriptionField;
        
        private string TranslationFirstLetterField;
        
        private int TranslationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lexicon {
            get {
                return this.LexiconField;
            }
            set {
                if ((object.ReferenceEquals(this.LexiconField, value) != true)) {
                    this.LexiconField = value;
                    this.RaisePropertyChanged("Lexicon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhraseByDefault {
            get {
                return this.PhraseByDefaultField;
            }
            set {
                if ((this.PhraseByDefaultField.Equals(value) != true)) {
                    this.PhraseByDefaultField = value;
                    this.RaisePropertyChanged("PhraseByDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhraseId {
            get {
                return this.PhraseIdField;
            }
            set {
                if ((this.PhraseIdField.Equals(value) != true)) {
                    this.PhraseIdField = value;
                    this.RaisePropertyChanged("PhraseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationContent {
            get {
                return this.TranslationContentField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationContentField, value) != true)) {
                    this.TranslationContentField = value;
                    this.RaisePropertyChanged("TranslationContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationDescription {
            get {
                return this.TranslationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationDescriptionField, value) != true)) {
                    this.TranslationDescriptionField = value;
                    this.RaisePropertyChanged("TranslationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranslationFirstLetter {
            get {
                return this.TranslationFirstLetterField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationFirstLetterField, value) != true)) {
                    this.TranslationFirstLetterField = value;
                    this.RaisePropertyChanged("TranslationFirstLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranslationId {
            get {
                return this.TranslationIdField;
            }
            set {
                if ((this.TranslationIdField.Equals(value) != true)) {
                    this.TranslationIdField = value;
                    this.RaisePropertyChanged("TranslationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TranslationReference.ITranslationService")]
    public interface ITranslationService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayTranslations", ReplyAction="http://tempuri.org/ITranslationService/DisplayTranslationsResponse")]
        System.IAsyncResult BeginDisplayTranslations(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayTranslationsByPhraseId", ReplyAction="http://tempuri.org/ITranslationService/DisplayTranslationsByPhraseIdResponse")]
        System.IAsyncResult BeginDisplayTranslationsByPhraseId(int phraseId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationsByPhraseId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayTranslationByLexicon", ReplyAction="http://tempuri.org/ITranslationService/DisplayTranslationByLexiconResponse")]
        System.IAsyncResult BeginDisplayTranslationByLexicon(string lexicon, int languageId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByLexicon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayTranslationByFirstLetter", ReplyAction="http://tempuri.org/ITranslationService/DisplayTranslationByFirstLetterResponse")]
        System.IAsyncResult BeginDisplayTranslationByFirstLetter(string character, int languageId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByFirstLetter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayTranslationByLanguage", ReplyAction="http://tempuri.org/ITranslationService/DisplayTranslationByLanguageResponse")]
        System.IAsyncResult BeginDisplayTranslationByLanguage(int languageId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByLanguage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DisplayAllLexicalByLanguage", ReplyAction="http://tempuri.org/ITranslationService/DisplayAllLexicalByLanguageResponse")]
        System.IAsyncResult BeginDisplayAllLexicalByLanguage(int languageId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndDisplayAllLexicalByLanguage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/CreateTranslation", ReplyAction="http://tempuri.org/ITranslationService/CreateTranslationResponse")]
        System.IAsyncResult BeginCreateTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateTranslation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/EditTranslation", ReplyAction="http://tempuri.org/ITranslationService/EditTranslationResponse")]
        System.IAsyncResult BeginEditTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState);
        
        bool EndEditTranslation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITranslationService/DeleteTranslation", ReplyAction="http://tempuri.org/ITranslationService/DeleteTranslationResponse")]
        System.IAsyncResult BeginDeleteTranslation(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTranslation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITranslationServiceChannel : WindowsPhoneCore.TranslationReference.ITranslationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayTranslationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayTranslationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayTranslationsByPhraseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayTranslationsByPhraseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayTranslationByLexiconCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayTranslationByLexiconCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayTranslationByFirstLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayTranslationByFirstLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayTranslationByLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayTranslationByLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisplayAllLexicalByLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisplayAllLexicalByLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTranslationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTranslationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditTranslationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditTranslationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTranslationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTranslationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslationServiceClient : System.ServiceModel.ClientBase<WindowsPhoneCore.TranslationReference.ITranslationService>, WindowsPhoneCore.TranslationReference.ITranslationService {
        
        private BeginOperationDelegate onBeginDisplayTranslationsDelegate;
        
        private EndOperationDelegate onEndDisplayTranslationsDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayTranslationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayTranslationsByPhraseIdDelegate;
        
        private EndOperationDelegate onEndDisplayTranslationsByPhraseIdDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayTranslationsByPhraseIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayTranslationByLexiconDelegate;
        
        private EndOperationDelegate onEndDisplayTranslationByLexiconDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayTranslationByLexiconCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayTranslationByFirstLetterDelegate;
        
        private EndOperationDelegate onEndDisplayTranslationByFirstLetterDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayTranslationByFirstLetterCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayTranslationByLanguageDelegate;
        
        private EndOperationDelegate onEndDisplayTranslationByLanguageDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayTranslationByLanguageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisplayAllLexicalByLanguageDelegate;
        
        private EndOperationDelegate onEndDisplayAllLexicalByLanguageDelegate;
        
        private System.Threading.SendOrPostCallback onDisplayAllLexicalByLanguageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTranslationDelegate;
        
        private EndOperationDelegate onEndCreateTranslationDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTranslationCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditTranslationDelegate;
        
        private EndOperationDelegate onEndEditTranslationDelegate;
        
        private System.Threading.SendOrPostCallback onEditTranslationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTranslationDelegate;
        
        private EndOperationDelegate onEndDeleteTranslationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTranslationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TranslationServiceClient() {
        }
        
        public TranslationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TranslationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DisplayTranslationsCompletedEventArgs> DisplayTranslationsCompleted;
        
        public event System.EventHandler<DisplayTranslationsByPhraseIdCompletedEventArgs> DisplayTranslationsByPhraseIdCompleted;
        
        public event System.EventHandler<DisplayTranslationByLexiconCompletedEventArgs> DisplayTranslationByLexiconCompleted;
        
        public event System.EventHandler<DisplayTranslationByFirstLetterCompletedEventArgs> DisplayTranslationByFirstLetterCompleted;
        
        public event System.EventHandler<DisplayTranslationByLanguageCompletedEventArgs> DisplayTranslationByLanguageCompleted;
        
        public event System.EventHandler<DisplayAllLexicalByLanguageCompletedEventArgs> DisplayAllLexicalByLanguageCompleted;
        
        public event System.EventHandler<CreateTranslationCompletedEventArgs> CreateTranslationCompleted;
        
        public event System.EventHandler<EditTranslationCompletedEventArgs> EditTranslationCompleted;
        
        public event System.EventHandler<DeleteTranslationCompletedEventArgs> DeleteTranslationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayTranslations(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayTranslations(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayTranslations(System.IAsyncResult result) {
            return base.Channel.EndDisplayTranslations(result);
        }
        
        private System.IAsyncResult OnBeginDisplayTranslations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayTranslations(callback, asyncState);
        }
        
        private object[] OnEndDisplayTranslations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayTranslations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayTranslationsCompleted(object state) {
            if ((this.DisplayTranslationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayTranslationsCompleted(this, new DisplayTranslationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayTranslationsAsync() {
            this.DisplayTranslationsAsync(null);
        }
        
        public void DisplayTranslationsAsync(object userState) {
            if ((this.onBeginDisplayTranslationsDelegate == null)) {
                this.onBeginDisplayTranslationsDelegate = new BeginOperationDelegate(this.OnBeginDisplayTranslations);
            }
            if ((this.onEndDisplayTranslationsDelegate == null)) {
                this.onEndDisplayTranslationsDelegate = new EndOperationDelegate(this.OnEndDisplayTranslations);
            }
            if ((this.onDisplayTranslationsCompletedDelegate == null)) {
                this.onDisplayTranslationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayTranslationsCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayTranslationsDelegate, null, this.onEndDisplayTranslationsDelegate, this.onDisplayTranslationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayTranslationsByPhraseId(int phraseId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayTranslationsByPhraseId(phraseId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayTranslationsByPhraseId(System.IAsyncResult result) {
            return base.Channel.EndDisplayTranslationsByPhraseId(result);
        }
        
        private System.IAsyncResult OnBeginDisplayTranslationsByPhraseId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int phraseId = ((int)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayTranslationsByPhraseId(phraseId, callback, asyncState);
        }
        
        private object[] OnEndDisplayTranslationsByPhraseId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayTranslationsByPhraseId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayTranslationsByPhraseIdCompleted(object state) {
            if ((this.DisplayTranslationsByPhraseIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayTranslationsByPhraseIdCompleted(this, new DisplayTranslationsByPhraseIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayTranslationsByPhraseIdAsync(int phraseId) {
            this.DisplayTranslationsByPhraseIdAsync(phraseId, null);
        }
        
        public void DisplayTranslationsByPhraseIdAsync(int phraseId, object userState) {
            if ((this.onBeginDisplayTranslationsByPhraseIdDelegate == null)) {
                this.onBeginDisplayTranslationsByPhraseIdDelegate = new BeginOperationDelegate(this.OnBeginDisplayTranslationsByPhraseId);
            }
            if ((this.onEndDisplayTranslationsByPhraseIdDelegate == null)) {
                this.onEndDisplayTranslationsByPhraseIdDelegate = new EndOperationDelegate(this.OnEndDisplayTranslationsByPhraseId);
            }
            if ((this.onDisplayTranslationsByPhraseIdCompletedDelegate == null)) {
                this.onDisplayTranslationsByPhraseIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayTranslationsByPhraseIdCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayTranslationsByPhraseIdDelegate, new object[] {
                        phraseId}, this.onEndDisplayTranslationsByPhraseIdDelegate, this.onDisplayTranslationsByPhraseIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayTranslationByLexicon(string lexicon, int languageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayTranslationByLexicon(lexicon, languageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayTranslationByLexicon(System.IAsyncResult result) {
            return base.Channel.EndDisplayTranslationByLexicon(result);
        }
        
        private System.IAsyncResult OnBeginDisplayTranslationByLexicon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lexicon = ((string)(inValues[0]));
            int languageId = ((int)(inValues[1]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayTranslationByLexicon(lexicon, languageId, callback, asyncState);
        }
        
        private object[] OnEndDisplayTranslationByLexicon(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayTranslationByLexicon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayTranslationByLexiconCompleted(object state) {
            if ((this.DisplayTranslationByLexiconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayTranslationByLexiconCompleted(this, new DisplayTranslationByLexiconCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayTranslationByLexiconAsync(string lexicon, int languageId) {
            this.DisplayTranslationByLexiconAsync(lexicon, languageId, null);
        }
        
        public void DisplayTranslationByLexiconAsync(string lexicon, int languageId, object userState) {
            if ((this.onBeginDisplayTranslationByLexiconDelegate == null)) {
                this.onBeginDisplayTranslationByLexiconDelegate = new BeginOperationDelegate(this.OnBeginDisplayTranslationByLexicon);
            }
            if ((this.onEndDisplayTranslationByLexiconDelegate == null)) {
                this.onEndDisplayTranslationByLexiconDelegate = new EndOperationDelegate(this.OnEndDisplayTranslationByLexicon);
            }
            if ((this.onDisplayTranslationByLexiconCompletedDelegate == null)) {
                this.onDisplayTranslationByLexiconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayTranslationByLexiconCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayTranslationByLexiconDelegate, new object[] {
                        lexicon,
                        languageId}, this.onEndDisplayTranslationByLexiconDelegate, this.onDisplayTranslationByLexiconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayTranslationByFirstLetter(string character, int languageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayTranslationByFirstLetter(character, languageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayTranslationByFirstLetter(System.IAsyncResult result) {
            return base.Channel.EndDisplayTranslationByFirstLetter(result);
        }
        
        private System.IAsyncResult OnBeginDisplayTranslationByFirstLetter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string character = ((string)(inValues[0]));
            int languageId = ((int)(inValues[1]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayTranslationByFirstLetter(character, languageId, callback, asyncState);
        }
        
        private object[] OnEndDisplayTranslationByFirstLetter(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayTranslationByFirstLetter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayTranslationByFirstLetterCompleted(object state) {
            if ((this.DisplayTranslationByFirstLetterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayTranslationByFirstLetterCompleted(this, new DisplayTranslationByFirstLetterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayTranslationByFirstLetterAsync(string character, int languageId) {
            this.DisplayTranslationByFirstLetterAsync(character, languageId, null);
        }
        
        public void DisplayTranslationByFirstLetterAsync(string character, int languageId, object userState) {
            if ((this.onBeginDisplayTranslationByFirstLetterDelegate == null)) {
                this.onBeginDisplayTranslationByFirstLetterDelegate = new BeginOperationDelegate(this.OnBeginDisplayTranslationByFirstLetter);
            }
            if ((this.onEndDisplayTranslationByFirstLetterDelegate == null)) {
                this.onEndDisplayTranslationByFirstLetterDelegate = new EndOperationDelegate(this.OnEndDisplayTranslationByFirstLetter);
            }
            if ((this.onDisplayTranslationByFirstLetterCompletedDelegate == null)) {
                this.onDisplayTranslationByFirstLetterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayTranslationByFirstLetterCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayTranslationByFirstLetterDelegate, new object[] {
                        character,
                        languageId}, this.onEndDisplayTranslationByFirstLetterDelegate, this.onDisplayTranslationByFirstLetterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayTranslationByLanguage(int languageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayTranslationByLanguage(languageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayTranslationByLanguage(System.IAsyncResult result) {
            return base.Channel.EndDisplayTranslationByLanguage(result);
        }
        
        private System.IAsyncResult OnBeginDisplayTranslationByLanguage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int languageId = ((int)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayTranslationByLanguage(languageId, callback, asyncState);
        }
        
        private object[] OnEndDisplayTranslationByLanguage(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayTranslationByLanguage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayTranslationByLanguageCompleted(object state) {
            if ((this.DisplayTranslationByLanguageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayTranslationByLanguageCompleted(this, new DisplayTranslationByLanguageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayTranslationByLanguageAsync(int languageId) {
            this.DisplayTranslationByLanguageAsync(languageId, null);
        }
        
        public void DisplayTranslationByLanguageAsync(int languageId, object userState) {
            if ((this.onBeginDisplayTranslationByLanguageDelegate == null)) {
                this.onBeginDisplayTranslationByLanguageDelegate = new BeginOperationDelegate(this.OnBeginDisplayTranslationByLanguage);
            }
            if ((this.onEndDisplayTranslationByLanguageDelegate == null)) {
                this.onEndDisplayTranslationByLanguageDelegate = new EndOperationDelegate(this.OnEndDisplayTranslationByLanguage);
            }
            if ((this.onDisplayTranslationByLanguageCompletedDelegate == null)) {
                this.onDisplayTranslationByLanguageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayTranslationByLanguageCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayTranslationByLanguageDelegate, new object[] {
                        languageId}, this.onEndDisplayTranslationByLanguageDelegate, this.onDisplayTranslationByLanguageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDisplayAllLexicalByLanguage(int languageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisplayAllLexicalByLanguage(languageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> WindowsPhoneCore.TranslationReference.ITranslationService.EndDisplayAllLexicalByLanguage(System.IAsyncResult result) {
            return base.Channel.EndDisplayAllLexicalByLanguage(result);
        }
        
        private System.IAsyncResult OnBeginDisplayAllLexicalByLanguage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int languageId = ((int)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDisplayAllLexicalByLanguage(languageId, callback, asyncState);
        }
        
        private object[] OnEndDisplayAllLexicalByLanguage(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDisplayAllLexicalByLanguage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisplayAllLexicalByLanguageCompleted(object state) {
            if ((this.DisplayAllLexicalByLanguageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisplayAllLexicalByLanguageCompleted(this, new DisplayAllLexicalByLanguageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisplayAllLexicalByLanguageAsync(int languageId) {
            this.DisplayAllLexicalByLanguageAsync(languageId, null);
        }
        
        public void DisplayAllLexicalByLanguageAsync(int languageId, object userState) {
            if ((this.onBeginDisplayAllLexicalByLanguageDelegate == null)) {
                this.onBeginDisplayAllLexicalByLanguageDelegate = new BeginOperationDelegate(this.OnBeginDisplayAllLexicalByLanguage);
            }
            if ((this.onEndDisplayAllLexicalByLanguageDelegate == null)) {
                this.onEndDisplayAllLexicalByLanguageDelegate = new EndOperationDelegate(this.OnEndDisplayAllLexicalByLanguage);
            }
            if ((this.onDisplayAllLexicalByLanguageCompletedDelegate == null)) {
                this.onDisplayAllLexicalByLanguageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisplayAllLexicalByLanguageCompleted);
            }
            base.InvokeAsync(this.onBeginDisplayAllLexicalByLanguageDelegate, new object[] {
                        languageId}, this.onEndDisplayAllLexicalByLanguageDelegate, this.onDisplayAllLexicalByLanguageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginCreateTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTranslation(translation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WindowsPhoneCore.TranslationReference.ITranslationService.EndCreateTranslation(System.IAsyncResult result) {
            return base.Channel.EndCreateTranslation(result);
        }
        
        private System.IAsyncResult OnBeginCreateTranslation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WindowsPhoneCore.TranslationReference.Translation translation = ((WindowsPhoneCore.TranslationReference.Translation)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginCreateTranslation(translation, callback, asyncState);
        }
        
        private object[] OnEndCreateTranslation(System.IAsyncResult result) {
            bool retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndCreateTranslation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTranslationCompleted(object state) {
            if ((this.CreateTranslationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTranslationCompleted(this, new CreateTranslationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTranslationAsync(WindowsPhoneCore.TranslationReference.Translation translation) {
            this.CreateTranslationAsync(translation, null);
        }
        
        public void CreateTranslationAsync(WindowsPhoneCore.TranslationReference.Translation translation, object userState) {
            if ((this.onBeginCreateTranslationDelegate == null)) {
                this.onBeginCreateTranslationDelegate = new BeginOperationDelegate(this.OnBeginCreateTranslation);
            }
            if ((this.onEndCreateTranslationDelegate == null)) {
                this.onEndCreateTranslationDelegate = new EndOperationDelegate(this.OnEndCreateTranslation);
            }
            if ((this.onCreateTranslationCompletedDelegate == null)) {
                this.onCreateTranslationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTranslationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTranslationDelegate, new object[] {
                        translation}, this.onEndCreateTranslationDelegate, this.onCreateTranslationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginEditTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditTranslation(translation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WindowsPhoneCore.TranslationReference.ITranslationService.EndEditTranslation(System.IAsyncResult result) {
            return base.Channel.EndEditTranslation(result);
        }
        
        private System.IAsyncResult OnBeginEditTranslation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WindowsPhoneCore.TranslationReference.Translation translation = ((WindowsPhoneCore.TranslationReference.Translation)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginEditTranslation(translation, callback, asyncState);
        }
        
        private object[] OnEndEditTranslation(System.IAsyncResult result) {
            bool retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndEditTranslation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditTranslationCompleted(object state) {
            if ((this.EditTranslationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditTranslationCompleted(this, new EditTranslationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditTranslationAsync(WindowsPhoneCore.TranslationReference.Translation translation) {
            this.EditTranslationAsync(translation, null);
        }
        
        public void EditTranslationAsync(WindowsPhoneCore.TranslationReference.Translation translation, object userState) {
            if ((this.onBeginEditTranslationDelegate == null)) {
                this.onBeginEditTranslationDelegate = new BeginOperationDelegate(this.OnBeginEditTranslation);
            }
            if ((this.onEndEditTranslationDelegate == null)) {
                this.onEndEditTranslationDelegate = new EndOperationDelegate(this.OnEndEditTranslation);
            }
            if ((this.onEditTranslationCompletedDelegate == null)) {
                this.onEditTranslationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditTranslationCompleted);
            }
            base.InvokeAsync(this.onBeginEditTranslationDelegate, new object[] {
                        translation}, this.onEndEditTranslationDelegate, this.onEditTranslationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneCore.TranslationReference.ITranslationService.BeginDeleteTranslation(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTranslation(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WindowsPhoneCore.TranslationReference.ITranslationService.EndDeleteTranslation(System.IAsyncResult result) {
            return base.Channel.EndDeleteTranslation(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTranslation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).BeginDeleteTranslation(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteTranslation(System.IAsyncResult result) {
            bool retVal = ((WindowsPhoneCore.TranslationReference.ITranslationService)(this)).EndDeleteTranslation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTranslationCompleted(object state) {
            if ((this.DeleteTranslationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTranslationCompleted(this, new DeleteTranslationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTranslationAsync(int id) {
            this.DeleteTranslationAsync(id, null);
        }
        
        public void DeleteTranslationAsync(int id, object userState) {
            if ((this.onBeginDeleteTranslationDelegate == null)) {
                this.onBeginDeleteTranslationDelegate = new BeginOperationDelegate(this.OnBeginDeleteTranslation);
            }
            if ((this.onEndDeleteTranslationDelegate == null)) {
                this.onEndDeleteTranslationDelegate = new EndOperationDelegate(this.OnEndDeleteTranslation);
            }
            if ((this.onDeleteTranslationCompletedDelegate == null)) {
                this.onDeleteTranslationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTranslationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTranslationDelegate, new object[] {
                        id}, this.onEndDeleteTranslationDelegate, this.onDeleteTranslationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WindowsPhoneCore.TranslationReference.ITranslationService CreateChannel() {
            return new TranslationServiceClientChannel(this);
        }
        
        private class TranslationServiceClientChannel : ChannelBase<WindowsPhoneCore.TranslationReference.ITranslationService>, WindowsPhoneCore.TranslationReference.ITranslationService {
            
            public TranslationServiceClientChannel(System.ServiceModel.ClientBase<WindowsPhoneCore.TranslationReference.ITranslationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDisplayTranslations(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DisplayTranslations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> _result = ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(base.EndInvoke("DisplayTranslations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayTranslationsByPhraseId(int phraseId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = phraseId;
                System.IAsyncResult _result = base.BeginInvoke("DisplayTranslationsByPhraseId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationsByPhraseId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> _result = ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(base.EndInvoke("DisplayTranslationsByPhraseId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayTranslationByLexicon(string lexicon, int languageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lexicon;
                _args[1] = languageId;
                System.IAsyncResult _result = base.BeginInvoke("DisplayTranslationByLexicon", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByLexicon(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> _result = ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(base.EndInvoke("DisplayTranslationByLexicon", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayTranslationByFirstLetter(string character, int languageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = character;
                _args[1] = languageId;
                System.IAsyncResult _result = base.BeginInvoke("DisplayTranslationByFirstLetter", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByFirstLetter(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> _result = ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(base.EndInvoke("DisplayTranslationByFirstLetter", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayTranslationByLanguage(int languageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = languageId;
                System.IAsyncResult _result = base.BeginInvoke("DisplayTranslationByLanguage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> EndDisplayTranslationByLanguage(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation> _result = ((System.Collections.ObjectModel.ObservableCollection<WindowsPhoneCore.TranslationReference.Translation>)(base.EndInvoke("DisplayTranslationByLanguage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisplayAllLexicalByLanguage(int languageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = languageId;
                System.IAsyncResult _result = base.BeginInvoke("DisplayAllLexicalByLanguage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndDisplayAllLexicalByLanguage(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("DisplayAllLexicalByLanguage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = translation;
                System.IAsyncResult _result = base.BeginInvoke("CreateTranslation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateTranslation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateTranslation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditTranslation(WindowsPhoneCore.TranslationReference.Translation translation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = translation;
                System.IAsyncResult _result = base.BeginInvoke("EditTranslation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEditTranslation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EditTranslation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTranslation(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTranslation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTranslation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteTranslation", _args, result)));
                return _result;
            }
        }
    }
}
